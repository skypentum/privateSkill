apache 2.4.x설치
	설치
	svn checkout http://svn.apache.org/repos/asf/httpd/httpd/tags/2.4.17/ httpd-2.4.17
	
	cd httpd-2.4.17

	svn co http://svn.apache.org/repos/asf/apr/apr/branches/1.4.x srclib/apr
	svn co http://svn.apache.org/repos/asf/apr/apr-util/branches/1.3.x srclib/apr-util

	wget http://ftp.cs.stanford.edu/pub/exim/pcre/pcre-8.35.tar.gz
	
	tar -xvzf pcre-8.35.tar.gz
	
	cd pcre-8.35
	./configure --enable-unicode-properties=yes
	make;make install

	./buildconf
	./configure --prefix=/usr/local/apache2 --with-included-apr --enable-alias=shared --enable-authz_host=shared --enable-authz_user=shared --enable-deflate=shared --enable-negotiation=shared --enable-proxy=shared --enable-ssl=shared --enable-reqtimeout=shared --enable-status=shared --enable-auth_basic=shared --enable-dir=shared --enable-authn_file=shared --enable-autoindex=shared --enable-env=shared --enable-php5=shared --enable-authz_default=shared --enable-cgi=shared --enable-setenvif=shared --enable-authz_groupfile=shared --enable-mime=shared --enable-proxy_http=shared --enable-proxy_wstunnel=shared --with-pcre=/usr/local/pcre
	make;make install

	conf/httpd.conf 파일 설정
	http : Listen 80 
	https : Listen 443

	ServerName:127.0.0.1

tomcat 설치 
	아래 사이트에서 다운로드 받는다.
	http://tomcat.apache.org/

	설치
	window : installer 파일을 다운로드 받은 후 설치
	linux : tar.gz 파일 받아서 압축 푼다.
	ex) tar -xzvf /usr/local/apache-tomcat-7.0.x.tar.gz

	$tomcat_home/conf/server.xml 설정
	http:
	<Connector port="8080" protocol="HTTP/1.1" maxThreads="150" minSpareThreads="25"
	maxSpareThreads="75" enableLookups="false" redirectPort="8443" acceptCount="100"
	debug="0" connectionTimeout="20000" disableUploadTimeout="true" URIEncoding="UTF-8"/>

	https :
	<Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true" maxThreads="150" 
	scheme="https" secure="true" isSecure="true" clientAuth="false" sslProtocol="TLS"
	keystoreFile="/usr/local/tomcat_a/bin/tomcat.keystore" keystorePass="spiretech"/>

	<!-- Define an AJP 1.3 Connector on port 8009 -->
	<Connector port="8009" protocol="AJP/1.3" redirectPort="8443" URIEncoding="UTF-8"/>

	catalina.sh에 JVM gabage collecter 값 설정
	vi /usr/local/tomcat/bin/catalina.sh
	JAVA_OPTS="-server -Xms4096m -Xmx4096m -XX:PermSize=512m -XX:MaxPermSize=512m"

apache-tomcat 연동
	wget http://www.apache.org/dist/tomcat/tomcat-connectors/jk/tomcat-connectors-1.2.40-src.tar.gz
	tar zxvf tomcat-connectors-1.2.40-src.tar.gz
	cd tomcat-connectors-1.2.40-src/native
	./configure --with-apxs=/usr/local/apache2/bin/apxs
	make;make install

	$apache_home/conf/httpd.conf 파일에 다음 내용 추가
	LoadModule jk_module modules/mod_jk.so
	
	https 적용시에는 다음 LoadModule 추가
	LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
	LoadModule proxy_module modules/mod_proxy.so
	LoadModule ssl_module modules/mod_ssl.so
	
	TraceEnable Off
	ServerSignature Off
	ServerTokens Prod

	<IfModule jk_module>
	    JkWorkersFile    conf/workers.properties
	    JkLogFile        logs/mod_jk.log
	    JkLogLevel       info
	</IfModule>

	<VirtualHost *:443>
	   SSLEngine on
	   SSLCertificateFile /usr/local/apache/conf/server.crt
	   SSLCertificateKeyFile /usr/local/apache/conf/server.key
	   SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown
	   CustomLog logs/ssl_request_log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

	   ServerName spiretech.com

	   JkMount  /*.js test1
	   JkMount  /*.jpg test1
	   JkMount  /*.jpeg test1
	   JkMount  /*.css test1
	   JkMount  /*.gif test1
	   JkMount  /*.png test1
	   JkMount  /*.svg test1

	   JkMount  /* test1
	</VirtualHost>

	$apache_home/conf/workers.properties에 다음 내용 추가
	workers.tomcat_home=/home/local/tomcat
	workers.java_home=/usr/local/jdk1.7.0_75
	ps=/

	worker.list=test1

	worker.test1.port=7709
	worker.test1.host=localhost
	worker.test1.type=ajp13
	worker.test1.lbfactor=1

https 사용을 위한 사설 인증서 만들기(apache 용)
	cd /usr/local/apache/conf
	openssl genrsa -des3 -out server.key 2048
	openssl req -new -key server.key -out server.csr
	cp server.key server.key.org
	openssl rsa -in server.key.org -out server.key
	openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt

https 사용을 위한 사설 인증서 만들기(tomcat 용)
	http://takuma99.tistory.com/224 을 참조
	$JAVA_HOME/bin/keytool -genkey -alias tomcat -keyalg RSA -validity 3650 -keystore tomcat.keystore

load balancer 설정(from apache) 
	http://x2framework.org/x2/handler/ForumBoard?topMenuType=0&forumId=0000000064&menuCd=53&pageNo=&x2start=Info&orderType=1&printType=0&boardId=0000000000003580&memberYn=N&listCount=20 을 참조

	<VirtualHost *:443>
		:
		SSLProxyEngine on
		ProxyPreserveHost On
		ProxyRequests Off
		:
	</VirtualHost>

	$apache_home/conf/workers.properties에 다음 내용으로 수정
	workers.tomcat_home=/home/local/tomcat_kt_pandora
	workers.java_home=/usr/local/jdk1.7.0_75
	ps=/
	
	#장비 개수 만큼 list 정의
	worker.list=test1,test2,test3,loadbalancer

	worker.test1.port=8009
	worker.test1.host=localhost
	worker.test1.type=ajp13
	worker.test1.lbfactor=1
	
	#장비 개수 만큼 설정 정보 정의
	worker.test2.port=8109
	worker.test2.host=localhost
	worker.test2.type=ajp13
	worker.test2.lbfactor=1

	worker.test3.port=8209
	worker.test3.host=localhost
	worker.test3.type=ajp13
	worker.test3.lbfactor=1

	#Load Balancing 설정
	worker.loadbalancer.type=lb
	worker.loadbalancer.balanced_workers=test1,test2,test3
	worker.loadbalancer.sticky_session=true
	worker.loadbalancer.method=T

        $tomcat_home/conf/server.xml에 다음 내용으로 수정
	<!-- You should set jvmRoute to support load-balancing via AJP ie : -->                    
	<Engine name="Catalina" defaultHost="localhost" jvmRoute="test1">

session clustering 설정(from tomcat) 
	$tomcat_home/conf/server.xml에 다음 내용으로 수정
	<Cluster className="org.apache.catalina.ha.tcp.SimpleTcpCluster" channelSendOptions="8">
	    <Manager className="org.apache.catalina.ha.session.DeltaManager"
	    expireSessionsOnShutdown="false"
	    notifyListenersOnReplication="true"/>

	    <Channel className="org.apache.catalina.tribes.group.GroupChannel">
	    <Membership className="org.apache.catalina.tribes.membership.McastService"
	        address="228.0.0.4"
	        port="45564"
	        frequency="500"
	        dropTime="3000"/>
	    <Receiver className="org.apache.catalina.tribes.transport.nio.NioReceiver"
	        address="IP Address" -> 장비별 IP Address 설정 ex)192.168.10.204 
	        port="4000" -> 장비별로 port를 다르게 설정한다.
	        autoBind="100"
	        selectorTimeout="5000"
	        maxThreads="6"/>
	    <Sender className="org.apache.catalina.tribes.transport.ReplicationTransmitter">
	    <Transport className="org.apache.catalina.tribes.transport.nio.PooledParallelSender"/>
	    </Sender>
	    <Interceptor className="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"/>
	    <Interceptor className="org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor"/>
	    </Channel>
	    <Valve className="org.apache.catalina.ha.tcp.ReplicationValve" filter=""/>
	    <Valve className="org.apache.catalina.ha.session.JvmRouteBinderValve"/>
	    <Deployer className="org.apache.catalina.ha.deploy.FarmWarDeployer"
	        tempDir="/tmp/war-temp/"
	        deployDir="/tmp/war-deploy/"
	        watchDir="/tmp/war-listen/"
	        watchEnabled="false"/>
	    <ClusterListener className="org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener"/>
	    <ClusterListener className="org.apache.catalina.ha.session.ClusterSessionListener"/>
        </Cluster>

	$source_home/WEB-INF/web.xml에 다음 내용을 추가한다.
	<distributable />
